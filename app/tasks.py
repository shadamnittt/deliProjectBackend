from app.celery_worker import celery_app  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Celery
from parsing.parse_films import FilmParser  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–≤–æ–π –ø–∞—Ä—Å–µ—Ä
from app.database import SessionLocal
from selenium import webdriver

import sys
import os
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

@celery_app.task
def parse_films_task():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
    options = webdriver.ChromeOptions()
    options.add_argument("--headless")
    driver = webdriver.Chrome(options=options)

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db = SessionLocal()

    try:
        # –ò–Ω—Å—Ç–∞–Ω—Ü–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä
        parser = FilmParser(driver, db)
        films_links = parser.get_film_links()
        parsed_films = []

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
        for film in films_links:
            print(f"üì• –ü–∞—Ä—Å–∏–º: {film['title']}")
            film_info = parser.parse_film_page(film["link"])
            if film_info:
                parsed_films.append(film_info)

        print("‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω!")
    finally:
        driver.quit()
        db.close()
